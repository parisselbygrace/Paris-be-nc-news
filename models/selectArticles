const db = require(`../db/connection`);
const {checkArticleExists} = require ('../db/db.js')


exports.selectArticles = () => {
  return db
    .query(
      `
          SELECT articles.author, title, articles.article_id,
              topic, articles.created_at, articles.votes,
              COUNT(comments.body) AS comment_count
              FROM articles
              LEFT JOIN comments ON articles.article_id = comments.article_id
              GROUP BY articles.article_id
              ORDER BY articles.created_at DESC;
      `
    )
    .then((result) => {
      return result.rows;
    });
};

exports.selectArticleById = (article_id) => {
    return checkArticleExists(article_id).then(() => {
    return db.query(`SELECT *
            FROM articles
            WHERE articles.article_id = $1
            `,
            [article_id]).then((article)=>{
        return article.rows[0]})
    })
    }

    exports.selectArticleCommentsById = (article_id) => {
            return db.query(
              `SELECT * FROM comments WHERE article_id = $1 ORDER BY created_at DESC;`,
              [article_id]
            ).then((res) => {
            return res.rows}
            )}

    exports.addComment = (newComment, article_id) => {
        return checkArticleExists(article_id).then(() => {
        const addedValues = [newComment.body, article_id, newComment.username]
        return db.query(
            `
            INSERT INTO comments 
            (body, article_id, author)
            VALUES
            ($1, $2, $3)
            RETURNING *;
            `, 
            addedValues
        ).then ((res) => {
            return res.rows[0]
        })
    })
    }

    exports.patchedArticle = (votes, article_id) => {
      return checkArticleExists(article_id).then(() => {
      return db
        .query(
          `
        UPDATE articles
        SET votes = votes + $1
        WHERE article_id = $2
        RETURNING *;
      `,
          [votes.inc_votes, article_id]
        )
        .then((res) => {
          return res.rows[0];
        })
      })
    }